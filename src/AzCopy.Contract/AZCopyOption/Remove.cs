
// <auto-generated />
namespace AzCopy.Contract
{
    public class RemoveOption : CommandArgsBase
    {
        /// <summary>
		/// By default, the delete operation fails if a blob has snapshots. Specify 'include' to remove the root blob and all its snapshots; alternatively specify 'only' to remove only the snapshots but keep the root blob.
        /// </summary>
		[CLIArgumentName("delete-snapshots", true)]
		public string DeleteSnapshots { get; set; }

        /// <summary>
		/// Exclude these paths when removing. This option does not support wildcard characters (*). Checks relative path prefix. For example: myFolder;myFolder/subDirName/file.pdf
        /// </summary>
		[CLIArgumentName("exclude-path", true)]
		public string ExcludePath { get; set; }

        /// <summary>
		/// Exclude files where the name matches the pattern list. For example: *.jpg;*.pdf;exactName
        /// </summary>
		[CLIArgumentName("exclude-pattern", true)]
		public string ExcludePattern { get; set; }

        /// <summary>
		/// When deleting an Azure Files file or folder, force the deletion to work even if the existing object is has its read-only attribute set
        /// </summary>
		[CLIArgumentName("force-if-read-only")]
		public bool? ForceIfReadOnly { get; set; }

        /// <summary>
		/// Include only these paths when removing. This option does not support wildcard characters (*). Checks relative path prefix. For example: myFolder;myFolder/subDirName/file.pdf
        /// </summary>
		[CLIArgumentName("include-path", true)]
		public string IncludePath { get; set; }

        /// <summary>
		/// Include only files where the name matches the pattern list. For example: *.jpg;*.pdf;exactName
        /// </summary>
		[CLIArgumentName("include-pattern", true)]
		public string IncludePattern { get; set; }

        /// <summary>
		/// Defines the location of a file which contains the list of files and directories to be deleted. The relative paths should be delimited by line breaks, and the paths should NOT be URL-encoded.
        /// </summary>
		[CLIArgumentName("list-of-files", true)]
		public string ListOfFiles { get; set; }

        /// <summary>
		/// Define the log verbosity for the log file. Available levels include: INFO(all requests/responses), WARNING(slow responses), ERROR(only failed requests), and NONE(no output logs). (default 'INFO') (default "INFO")
        /// </summary>
		[CLIArgumentName("log-level", true)]
		public string LogLevel { get; set; }

        /// <summary>
		/// Look into sub-directories recursively when syncing between directories.
        /// </summary>
		[CLIArgumentName("recursive")]
		public bool? Recursive { get; set; }

        /// <summary>
		/// Caps the transfer rate, in megabits per second. Moment-by-moment throughput might vary slightly from the cap. If this option is set to zero, or it is omitted, the throughput isn't capped.
        /// </summary>
		[CLIArgumentName("cap-mbps")]
		public float? CapMbps { get; set; }

        /// <summary>
		/// Format of the command's output. The choices include: text, json. The default value is 'text'. (default "text")
        /// </summary>
		[CLIArgumentName("output-type", true)]
		public string OutputType { get; set; }

        /// <summary>
		/// Specifies additional domain suffixes where Azure Active Directory login tokens may be sent.  The default is '*.core.windows.net;*.core.chinacloudapi.cn;*.core.cloudapi.de;*.core.usgovcloudapi.net'. Any listed here are added to the default. For security, you should only put Microsoft Azure domains here. Separate multiple entries with semi-colons.
        /// </summary>
		[CLIArgumentName("trusted-microsoft-suffixes", true)]
		public string TrustedMicrosoftSuffixes { get; set; }

	}
}